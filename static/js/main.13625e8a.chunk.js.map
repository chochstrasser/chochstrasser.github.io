{"version":3,"sources":["images/portfolio.jpg","portfolio/portfolioContact.js","portfolio/PortfolioLanguages.js","portfolio/portfolioSkills.js","portfolio/portfolioLeftColumn.js","footer/index.js","portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PortfolioContact","className","icon","href","progressBar95","width","height","progressBar3","progressBar30","PortfolioLanguages","style","progressBar90","progressBar80","progressBar47","progressBar50","progressBar20","progressBar60","PortfolioSkills","fullWidth","PortfolioLeftColumn","src","PortfolioImage","alt","Footer","maxWidthContent","maxWidth","Portfolio","library","add","fab","faUser","faBriefcase","faTwitter","faFacebookF","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13625e8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolio.20f0715e.jpg\";","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst PortfolioContact = () => (\n  <>\n    <p>\n      <FontAwesomeIcon\n        className=\"código-margin-right código-large código-text-teal\"\n        icon=\"briefcase\"\n      />\n      {/* <i className=\"fa fa-briefcase fa-fw código-margin-right código-large código-text-teal\"></i> */}\n      Web Developer\n    </p>\n    <p>\n      <i className=\"fa fa-home fa-fw código-margin-right código-large código-text-teal\"></i>\n      South Jordan, Utah\n    </p>\n    <p>\n      <i className=\"fa fa-envelope fa-fw código-margin-right código-large código-text-teal\"></i>\n      <a href=\"mailto:chase.hochstrasser@gmail.com\">\n        chase.hochstrasser@gmail.com\n      </a>\n    </p>\n    <p>\n      <i className=\"fa fa-phone fa-fw código-margin-right código-large código-text-teal\"></i>\n      <a href=\"tel:+1-435-830-7987\">(435)-830-7987</a>\n    </p>\n  </>\n);\n\nexport default PortfolioContact;\n","import React from \"react\";\n\nconst progressBar95 = {\n  width: \"95%\",\n  height: \"24px\"\n};\n\nconst progressBar3 = {\n  width: \"3%\",\n  height: \"24px\"\n};\n\nconst progressBar30 = {\n  width: \"30%\",\n  height: \"24px\"\n};\n\nconst PortfolioLanguages = () => (\n  <>\n    <p className=\"código-large código-text-theme\">\n      <b>\n        <i className=\"fa fa-globe fa-fw código-margin-right código-text-teal\"></i>\n        Languages\n      </b>\n    </p>\n    <p>English</p>\n    <div className=\"código-light-grey código-round-xlarge\">\n      <div\n        className=\"código-round-xlarge código-teal\"\n        style={progressBar95}\n      ></div>\n    </div>\n    <p>ASL</p>\n    <div className=\"código-light-grey código-round-xlarge\">\n      <div\n        className=\"código-round-xlarge código-teal\"\n        style={progressBar30}\n      ></div>\n    </div>\n    <p>Portuguese</p>\n    <div className=\"código-light-grey código-round-xlarge\">\n      <div\n        className=\"código-round-xlarge código-teal\"\n        style={progressBar3}\n      ></div>\n    </div>\n  </>\n);\n\nexport default PortfolioLanguages;\n","import React from \"react\";\n\nconst progressBar90 = {\n  width: \"90%\"\n};\n\nconst progressBar80 = {\n  width: \"80%\"\n};\n\nconst progressBar47 = {\n  width: \"47%\"\n};\n\nconst progressBar50 = {\n  width: \"50%\"\n};\n\nconst progressBar20 = {\n  width: \"20%\"\n};\n\nconst progressBar60 = {\n  width: \"60%\"\n};\n\nconst PortfolioSkills = () => (\n  <>\n    <p className=\"código-large\">\n      <b>\n        <i className=\"fa fa-asterisk fa-fw código-margin-right código-text-teal\"></i>\n        Skills\n      </b>\n    </p>\n    <p>React</p>\n    <div className=\"código-light-grey código-round-xlarge código-small\">\n      <div\n        className=\"código-container código-center código-round-xlarge código-teal\"\n        style={progressBar80}\n      >\n        90%\n      </div>\n    </div>\n    <p>Javascript</p>\n    <div className=\"código-light-grey código-round-xlarge código-small\">\n      <div\n        className=\"código-container código-center código-round-xlarge código-teal\"\n        style={progressBar90}\n      >\n        <div className=\"código-center código-text-white\">80%</div>\n      </div>\n    </div>\n    <p>WordPress</p>\n    <div className=\"código-light-grey código-round-xlarge código-small\">\n      <div\n        className=\"código-container código-center código-round-xlarge código-teal\"\n        style={progressBar47}\n      >\n        47%\n      </div>\n    </div>\n    <p>Algorithms</p>\n    <div className=\"código-light-grey código-round-xlarge código-small\">\n      <div\n        className=\"código-container código-center código-round-xlarge código-teal\"\n        style={progressBar50}\n      >\n        50%\n      </div>\n    </div>\n    <p>Angular</p>\n    <div className=\"código-light-grey código-round-xlarge código-small\">\n      <div\n        className=\"código-container código-center código-round-xlarge código-teal\"\n        style={progressBar20}\n      >\n        20%\n      </div>\n    </div>\n    <p>C#</p>\n    <div className=\"código-light-grey código-round-xlarge código-small\">\n      <div\n        className=\"código-container código-center código-round-xlarge código-teal\"\n        style={progressBar60}\n      >\n        60%\n      </div>\n    </div>\n  </>\n);\n\nexport default PortfolioSkills;\n","import React from \"react\";\nimport PortfolioContact from \"./portfolioContact\";\nimport PortfolioLanguages from \"./PortfolioLanguages\";\nimport PortfolioSkills from \"./portfolioSkills\";\nimport PortfolioImage from \"../images/portfolio.jpg\";\nimport \"./portfolio.css\";\n\nconst fullWidth = {\n  width: \"100%\"\n};\n\nconst PortfolioLeftColumn = () => (\n  <div className=\"código-col s12 m6 l4\">\n    <div className=\"código-white código-text-grey código-card-4\">\n      <div className=\"código-display-container\">\n        <img src={PortfolioImage} style={fullWidth} alt=\"Avatar\" />\n        <div className=\"código-container código-text-black full-width background-white-transparent\">\n          <h2>Chase Hochstrasser</h2>\n        </div>\n      </div>\n      <div className=\"código-container\">\n        <PortfolioContact />\n        <PortfolioSkills />\n        <PortfolioLanguages />\n        <br />\n      </div>\n    </div>\n  </div>\n);\n\nexport default PortfolioLeftColumn;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./footer.css\";\n\nconst Footer = () => (\n  <footer className=\"código-container código-teal código-center código-margin-top\">\n    <p>Find me on social media.</p>\n    <FontAwesomeIcon\n      className=\"código-hover-opacity space-around\"\n      icon={[\"fab\", \"facebook-square\"]}\n    />\n    <FontAwesomeIcon\n      className=\"código-hover-opacity space-around\"\n      icon={[\"fab\", \"linkedin\"]}\n    />\n    <br />\n    <br />\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport PortfolioLeftColumn from \"./portfolioLeftColumn\";\nimport Footer from \"../footer\";\n\nconst maxWidthContent = {\n  maxWidth: \"1400px\"\n};\n\nconst Portfolio = () => (\n  <>\n    <div className=\"código-content código-margin-top\" style={maxWidthContent}>\n      <div className=\"código-row-padding\">\n        <PortfolioLeftColumn />\n      </div>\n    </div>\n    <Footer />\n  </>\n);\n\nexport default Portfolio;\n","import React from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  fab,\n  faTwitter,\n  faFacebookF\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser, faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport Portfolio from \"./portfolio\";\n\nlibrary.add(fab, faUser, faBriefcase, faTwitter, faFacebookF);\n\nconst App = () => (\n  <>\n    <Portfolio />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}